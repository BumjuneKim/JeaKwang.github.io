---
title:  "HTTP SPEC - 2"
categories: seminar
---
<html lang="en">
<head>
  <meta charset="utf-8">
  <title>HTTP SPEC</title>
  <link rel="stylesheet" href="/css/reveal.css">
  <link rel="stylesheet" href="/css/theme/moon.css" id="theme">
  <!-- <link rel="stylesheet" href="/css/custome/2015-03-17.css"> -->
  <!--[if lt IE 9]>
	<script src="lib/js/html5shiv.js"></script>
	<![endif]-->
</head>
<body>
  <div class="reveal">
    <div class="slides">

      <section>      
      	<h1>HTTP 추가자료</h1>
      </section>

			<section>
				<h3>쿠키를 쓸 수 없는 브라우저에서는<br>세션을 사용하지 못하나?</h3>				
				<p>서버는 세션값을 자신이 가지고 있는 것과<br>클라이언트의 세션값을 비교하는 작업을합니다.</p>
				<p>그렇기 때문에 결과적으로는 어떤 방법이든간에<br>클라이어트는 서버로 해당 새션값을 전달하기만 하면 됩니다.</p>
				<p>그래서 input 태그의 type=hidden으로 담아서 전송하거나<br>쿼리스트링으로 전달 가능합니다.</p>
			</section>

     	<section>
					<img src="/images/2015-03-17/5.png" style="width: 800px; background: none; border: none;">
			</section>

			<section>

        <section>
  				<h3>인증서의 공개키를 가지지 않았다면 HTTPS를 사용할 수 없다?</h3>
  				<p>사용할 수 없다.  그러나</p>
  				<h4>테스트용으로 사용할 때</h4>
  				<p>OpenSSL로 ROOT CA라는 가상의 인증기관을 만들어<br>브라우저에 인증서를 추가할 수 있다.</p>
        </section>

        <section>
        <h3>개인키 생성</h3>
{% highlight ruby %}
// CA 개인키 생성
openssl genrsa -des3 -out ca.key 1024

// Site 개인키 생성
openssl genrsa -des3 -out server.key 1024
{% endhighlight %} 
          <p style="text-align: left;">
          * genrsa : 키 생성<br>
          * -des3 : 생성되는 키값의 알고리즘 명시<br>
          * -out : 생성되는 키의 이름<br>
          * 1024 : 생성되는 키의 사이즈<br>
          </p>
        </section>

        <section>
          <h3>인증서 요청서 생성</h3>
          <h5>CSR(Certificate Signing Request)</h5>
{% highlight ruby %}
// CA CSR 생성
openssl req -new -key ca.key -out ca.csr

// Site CSR 생성
openssl req -new -key server.key -out server.csr
{% endhighlight %}
          <p style="text-align: left;">
          * req : 인증서 관련 작업시 명시<br>
          * -new : 신규 인증서 요청 파일 생성<br>
          * -key : 인증서 요청 파일에 들어갈 키값 파일<br>
          * -out : 생성될 인증서 요청 파일 명<br>
          </p>
        </section>

        <section>
          <h3>ROOT CA인증서</h3>
          <h5>SSC(Self Signed Certificate)</h5>
          <p>브라우저에게 키를 전달하기위해 인증서를 전달</p>
          <p>CA의 키를 담고있는 인증서를 만들기 위해서 CA의 인증기관인 ROOT CA라는 가상의 인증기관을 통해 인증서 생성</p>
{% highlight ruby %}
//Root CA 인증서 생성 
openssl x509 -req -in ca.csr -out ca.crt -signkey ca.key 
{% endhighlight %}
          <p style="text-align: left;">
          * x509 : x509 인증서 관련 유틸리티<br>
          * -req : 인증서 관련 작업시 명시<br>
          * -in : 인증 요청 파일<br>
          * -signkey: 인증서에 담을 키값<br>
          * -out : 인증서 파일명<br>
          </p>
        </section>

        <section>
          <h3>Site의 인증서</h3>
          <h5>CRT(CA Certificate)</h5>
{% highlight ruby %}
//SITE 인증서 생성 
openssl x509 -req -in server.csr -out server.crt -signkey server.key -CA ca.crt -CAkey ca.key
{% endhighlight %}
          <p style="text-align: left;">
          * CA : CA의 인증서<br>
          * CAkey : CA의 키
          </p>
        </section>

        <section>
          <img src="/images/2015-03-17/6.png" style="width: 800px; background: none; border: none;">
        </section>

			</section>

      <section style="text-align: left;">
        <h1>THE END</h1>
      </section>
      
    </div>
  </div>
  <script src="/js/jquery-1.11.1.min.js"></script>
  <script src="/lib/js/head.min.js"></script>
  <script src="/js/reveal.js"></script>
  <script>
  Reveal.initialize({
    controls: true,
    progress: true,    
    slideNumber: true,
    // center: false,
    width: 960,
    height: 700,
    fragments: true,
    top: 0
  });
  </script>
</body>

</html>
